types: ./types.graphql
functions:

# added by mailgun template: (please uncomment)

  sendEmail:
    handler:
      code:
        src: ./src/mailgun/sendEmail.ts
        environment:
          MAILGUN_API_KEY: ${env:MAILGUN_API_KEY}
          MAILGUN_DOMAIN: ${env:MAILGUN_DOMAIN}
    type: resolver
    schema: ./src/mailgun/sendEmail.graphql

# added by email-password template: (please uncomment)

  signup:
    type: resolver
    schema: src/email-password/signup.graphql
    handler:
      code: src/email-password/signup.ts

  authenticate:
    type: resolver
    schema: src/email-password/authenticate.graphql
    handler:
      code: src/email-password/authenticate.ts

  loggedInUser:
    type: resolver
    schema: src/email-password/loggedInUser.graphql
    handler:
      code: src/email-password/loggedInUser.ts

  verifyUser:
    type: resolver
    schema: src/email-password/verifyUser.graphql
    handler:
      code: src/email-password/verifyUser.ts

  # newChatroom:
  #   type: resolver
  #   schema: src/newChatroom/newChatroom.graphql
  #   handler:
  #     code: src/newChatroom/newChatroom.ts
#

permissions:
- operation: Chatroom.read
- operation: Chatroom.create
  authenticated: true
- operation: Chatroom.update
  authenticated: true
- operation: File.read
- operation: File.create
- operation: File.update
- operation: File.delete
- operation: Message.read
- operation: Message.create
  authenticated: true
- operation: User.read
- operation: User.create
- operation: User.update
  authenticated: true
- operation: User.delete
- operation: ChatroomMessages.*
- operation: UserCreatedChatrooms.*
- operation: UserInvitedChatroom.*
- operation: UsersChatrooms.*
rootTokens:
- testSchemaExtention
